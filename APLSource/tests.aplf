 {ec}←tests;DEBUG;default;dictionary;T
⍝ test the text function
⍝ report errors in the session
⍝ and return the number of errors found
 T←##.tinytest
 ec←0 ⍝ error count

⍝ ERROR HANDLING
⍝ ==============

 DEBUG←1 ⍝ Debug mode ON
⍝ ----------------------

 ec+←(text T.catch 123 'no dictionary')'foo'

 dictionary←0
 ec+←(text T.catch 123 'invalid dictionary')'foo'

 dictionary←testDictionary

 ec+←(text T.catch 124 'no default language')'foo'

 ec+←'xx'(text T.catch 125 'unknown language')'foo'

 DEBUG←0 ⍝ Debug mode OFF
⍝ -----------------------
 ⍝ text should ignore errors and return its right argument
 ⎕EX'dictionary'

 ec+←(text T.match'foo')'foo' ⍝ no dictionary

 dictionary←0 0 0
 ec+←(text T.match'foo')'foo' ⍝ invalid dictionary

 dictionary←testDictionary
 ec+←(text T.match'foo')'foo' ⍝ no default language
 ec+←'xx'(text T.match'foo')'foo' ⍝ unknown language

⍝ DYADIC
⍝ ======
⍝ without default
 ec+←'fr'(text T.match'vache')'cow'
 ec+←'de'(text T.match'Katze')'cat'
 ec+←'fr'(text T.match'foo')'foo'

⍝ with default
 default←'fr'
 ec+←'fr'(text T.match'vache')'cow'
 ec+←'de'(text T.match'Katze')'cat'
 ec+←'fr'(text T.match'foo')'foo'


⍝ MONADIC
⍝ =======
 ec+←(text T.match'vache')'cow'
 ec+←(text T.match'chat')'cat'
 ec+←(text T.match'foo')'foo'

 ⎕←T.report ec
